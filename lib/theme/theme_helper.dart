import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.onPrimaryContainer.withOpacity(1),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.onPrimaryContainer.withOpacity(1),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(21.h),
          ),
          shadowColor: appTheme.blueGray1003f.withOpacity(0.25),
          elevation: 20,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray700,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray500,
          fontSize: 16.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 15.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.black900,
          fontSize: 8.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: colorScheme.primary,
          fontSize: 40.fSize,
          fontFamily: 'Passion One',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 36.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.primary,
          fontSize: 32.fSize,
          fontFamily: 'Passion One',
          fontWeight: FontWeight.w400,
        ),
        headlineMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 28.fSize,
          fontFamily: 'Nokora',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.errorContainer,
          fontSize: 25.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 13.fSize,
          fontFamily: 'Nokora',
          fontWeight: FontWeight.w700,
        ),
        labelMedium: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 11.fSize,
          fontFamily: 'Nokora',
          fontWeight: FontWeight.w700,
        ),
        labelSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 8.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 20.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleMedium: TextStyle(
          color: colorScheme.primary,
          fontSize: 18.fSize,
          fontFamily: 'Sofia Pro',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 15.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFFFF8C00),
    primaryContainer: Color(0XFFF90000),
    secondaryContainer: Color(0XFFB9B9B9),

    // Error colors
    errorContainer: Color(0XFF5B5B5B),
    onError: Color(0X33FE724C),

    // On colors(text colors)
    onPrimary: Color(0XFF111719),
    onPrimaryContainer: Color(0XCCFFFFFF),
    onSecondaryContainer: Color(0XFF1E1E1E),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber400 => Color(0XFFFFC529);

  // Black
  Color get black900 => Color(0XFF000000);

  // BlueGray
  Color get blueGray100 => Color(0XFFD3DAE2);
  Color get blueGray10001 => Color(0XFFD7D7D7);
  Color get blueGray10002 => Color(0XFFD9D9D9);
  Color get blueGray10003 => Color(0XFFD4D5DA);
  Color get blueGray400 => Color(0XFF858891);
  Color get blueGray50 => Color(0XFFEEF0F2);
  Color get blueGray900 => Color(0XFF323643);

  // BlueGrayf
  Color get blueGray1003f => Color(0X3FD3D1D8);

  // DeepOrange
  Color get deepOrange300 => Color(0XFFFB9C66);
  Color get deepOrange400 => Color(0XFFE56C45);
  Color get deepOrangeA400 => Color(0XFFFD3C00);

  // DeepPurple
  Color get deepPurple700 => Color(0XFF5A269A);

  // Gray
  Color get gray100 => Color(0XFFF5F5F5);
  Color get gray200 => Color(0XFFEBEBEB);
  Color get gray20001 => Color(0XFFEEEEEE);
  Color get gray20002 => Color(0XFFF2EAEA);
  Color get gray300 => Color(0XFFE4D9D9);
  Color get gray400 => Color(0XFFBDBABA);
  Color get gray40001 => Color(0XFFBEBEBE);
  Color get gray40002 => Color(0XFFC4C4C4);
  Color get gray500 => Color(0XFF9796A1);
  Color get gray50001 => Color(0XFF9E9898);
  Color get gray600 => Color(0XFF787070);
  Color get gray700 => Color(0XFF6F6767);
  Color get gray70001 => Color(0XFF66666D);
  Color get gray70002 => Color(0XFF5B5B5E);
  Color get gray800 => Color(0XFF494545);
  Color get gray80001 => Color(0XFF3A3A3A);

  // Grayf
  Color get gray2003f => Color(0X3FE8E8E8);

  // Green
  Color get green400 => Color(0XFF4EE476);
  Color get green900 => Color(0XFF17710F);
  Color get green90001 => Color(0XFF16700F);

  // Indigo
  Color get indigoA700 => Color(0XFF1D3BFF);

  // LightGreen
  Color get lightGreen200 => Color(0XFFCDE893);
  Color get lightGreen400 => Color(0XFFA7C95E);

  // Lime
  Color get lime100 => Color(0XFFEDFDCB);
  Color get lime500 => Color(0XFFB2E545);
  Color get lime600 => Color(0XFFDBC818);

  // Orange
  Color get orange100 => Color(0XFFFFE1BD);
  Color get orange10001 => Color(0XFFF8D6AD);
  Color get orange200 => Color(0XFFFFCC8E);
  Color get orange400 => Color(0XFFFFA333);
  Color get orange50 => Color(0XFFFFF3E5);
  Color get orangeA700 => Color(0XFFFF5B00);

  // Orangef
  Color get orange2003f => Color(0X3FF0BA6A);

  // Pink
  Color get pink300 => Color(0XFFFF647C);

  // Red
  Color get red500 => Color(0XFFF93225);

  // Teal
  Color get teal500 => Color(0XFF029094);
  Color get tealA700 => Color(0XFF00C48C);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
